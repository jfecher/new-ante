type S = message: String

impl print_s: Print S with
    printne s = printne s.message

// If the compiler decides to pass by reference, the code becomes:
// void foo(const S *x, S *y) {
//    ...
// }
// which can mutate x when x == y if not careful
foo (x: S) (y: S) =
    printne "x before: "
    print x
    mut z = y
    z.!message := "modifying y"
    printne "x after:  "
    print x

mut x = S "original x string"
foo x x

// args: --delete-binary
