effect Emit a with
    emit: a -> Unit

iota (n: U32) = loop (i = 0) ->
    if i < n then
        emit i
        recur (i + 1)

filter (stream: Unit -> Unit can Emit a) (f: a -> Bool pure) =
    handle stream ()
    | emit x ->
        if f x then
            emit x
        resume ()

map (stream: Unit -> Unit can Emit a) (f: a -> b pure): Unit can Emit b =
    handle stream ()
    | emit x ->
        emit (f x)
        resume ()

enumerate (stream: Unit -> Unit can Emit a): Unit can Emit (U32, a) =
    // Bug: can't mutably capture i in handle branch if it is declared as `mut i`
    i = !0u32
    handle stream ()
    | emit x ->
        emit (i, x)
        i := @i + 1
        resume ()

for (stream: Unit -> Unit can Emit a) (f: a -> Unit pure) =
    handle stream ()
    | emit x ->
        f x
        resume ()

even x = x % 2 == 0

my_print (x1: !U32, U32) =
    x = @first x1
    y = second x1
    print "${x}, ${y}"

iota 10
    with filter even
    with map (_ * 2u32)
    with enumerate
    with for my_print

// args: --delete-binary
// expected stdout:
// // id = c1m10_9
// effect Emit_c1m10_9 a_1 with
//     emit_2: a_1
// 
// // id = c1m10_99
// iota_c1m10_99 (n_1: U32) = (error)
// 
// // id = c1m10_16
// even_c1m10_16 x_13 = ==_? (%_? x_13 2) 0
// 
// // id = c1m10_85
// my_print_c1m10_85 (error) =
//     x_? = @_? first_?

// expected stderr:
// examples/codegen/effects/generators_complex.an:2:12	error: Expected an unindent but found `->`
//     emit: a -> Unit
// 
// examples/codegen/effects/generators_complex.an:4:16	error: Expected an expression but found `loop`
// iota (n: U32) = loop (i = 0) ->
// 
// examples/codegen/effects/generators_complex.an:9:7	error: Expected `=` to begin the function body but found `(`
// filter (stream: Unit -> Unit can Emit a) (f: a -> Bool pure) =
// 
// examples/codegen/effects/generators_complex.an:16:4	error: Expected `=` to begin the function body but found `(`
// map (stream: Unit -> Unit can Emit a) (f: a -> b pure): Unit can Emit b =
// 
// examples/codegen/effects/generators_complex.an:22:10	error: Expected `=` to begin the function body but found `(`
// enumerate (stream: Unit -> Unit can Emit a): Unit can Emit (U32, a) =
// 
// examples/codegen/effects/generators_complex.an:31:4	error: Expected `=` to begin the function body but found `(`
// for (stream: Unit -> Unit can Emit a) (f: a -> Unit pure) =
// 
// examples/codegen/effects/generators_complex.an:37:11	error: `%` is not defined, was it a typo?
// even x = x % 2 == 0
// 
// examples/codegen/effects/generators_complex.an:37:15	error: `==` is not defined, was it a typo?
// even x = x % 2 == 0
// 
// examples/codegen/effects/generators_complex.an:39:20	error: Expected a parameter but found `U32`
// my_print (x1: !U32, U32) =
// 
// examples/codegen/effects/generators_complex.an:40:15	error: Expected an unindent but found `x1`
//     x = @first x1
// 
// examples/codegen/effects/generators_complex.an:44:5	error: Expected `=` to begin the function body but found `10`
// iota 10

