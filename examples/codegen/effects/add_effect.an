effect Add with
    add: U32 -> Unit

foo () can Add =
    print "foo"
    add 1
    add 2

bar () =
    print "bar"
    add 3
    add 4

sum_all () =
    handle
        foo ()
        bar ()
        0
    | add y ->
        print "add called"
        r = resume ()
        print "add resume finished"
        y + r

// 10
sum_all () |> print

// args: --delete-binary
// expected stdout:
// // id = c1m71_40
// effect Add_c1m71_40 with
//     add_1: U32
// 
// // id = c1m71_32
// foo_c1m71_32 () =
//     print_? "foo"
//     add_? 1
//     add_? 2
// 
// // id = c1m71_70
// bar_c1m71_70 () =
//     print_? "bar"
//     add_? 3
//     add_? 4
// 
// // id = c1m71_56
// sum_all_c1m71_56 () =
//     handle 
//         foo_? ()
//         bar_? ()
//         0
//     | add_? y_? -> 
//         print_? "add called"
//         r_? = resume_? ()
//         print_? "add resume finished"
//         +_? y_? r_?

// expected stderr:
// examples/codegen/effects/add_effect.an:2:13	error: Expected an unindent but found `->`
//     add: U32 -> Unit
// 
// examples/codegen/effects/add_effect.an:5:4	error: `print` is not defined, was it a typo?
//     print "foo"
// 
// examples/codegen/effects/add_effect.an:6:4	error: `add` is not defined, was it a typo?
//     add 1
// 
// examples/codegen/effects/add_effect.an:7:4	error: `add` is not defined, was it a typo?
//     add 2
// 
// examples/codegen/effects/add_effect.an:10:4	error: `print` is not defined, was it a typo?
//     print "bar"
// 
// examples/codegen/effects/add_effect.an:11:4	error: `add` is not defined, was it a typo?
//     add 3
// 
// examples/codegen/effects/add_effect.an:12:4	error: `add` is not defined, was it a typo?
//     add 4
// 
// examples/codegen/effects/add_effect.an:26:8	error: Expected `=` to begin the function body but found `()`
// sum_all () |> print

