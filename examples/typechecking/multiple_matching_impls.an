
type Thing = nothing: Unit

trait Foo a with
    foo: fn a -> Unit

trait Bar a with
    bar: fn a -> Unit

trait Baz a with
    baz: fn a -> Unit

main () =
    // The call from which the `Foo a` constraint arises
    foo (Thing ())

// Candidate 1
impl candidate1 {_: Bar a}: Foo a with
    foo a = bar a

impl bar {_: Baz a}: Bar a with
    bar a = baz a

impl baz: Baz Thing with
    baz _ = ()


// Does not match
impl does_not_match {_: Print a}: Foo a with
    foo _ = ()


// Candidate 2
impl candidate2: Foo Thing with
    foo _ = ()

// args: --show-types
// expected exit status: 101
// expected stderr:
// thread 'main' panicked at src/type_inference/cst_traversal.rs:278:9:
// not yet implemented: check_impl
// note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

