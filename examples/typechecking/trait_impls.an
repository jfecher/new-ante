
trait Bar a -> b with
    bar: fn a a -> b


impl Bar I32 String with
    bar _ _ = "good"

impl Bar I32 I32 with
    bar _ _ = "bad return type"

impl Bar I32 Char String F64 Unit with
    bar _ _ = "bad impl args"



impl Bar I32 F64 with
    bar _ _ = 23.2 // Should be an error, we already have a Bar I32

foo a b = bar a b

baz (x: String) y = bar x y
bar 3 2

bar "four" "five"

// args: --show-types
// expected exit status: 101
// expected stderr:
// thread 'main' panicked at src/type_inference/type_context.rs:121:55:
// not yet implemented: Resolve named types
// note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

