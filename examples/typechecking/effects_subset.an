// Regression for #215
effect Emit a with
    emit: fn a -> Unit

iota (n: U32) = loop (i = 0) ->
    if i < n then
        emit i
        recur (i + 1)

filter stream predicate =
    handle stream ()
    | emit x ->
        if predicate x then
            emit x
        resume ()

for stream f =
    handle stream ()
    | emit x ->
        f x
        resume ()

iota 10
    with filter (fn x -> x % 2 == 0)
    with for print

// args: --check --show-types
// expected stdout:
// // id = c1m72_9
// effect Emit_c1m72_9 a_1 with
//     emit_2: fn a_1 -> Unit_b
// 
// // id = c1m72_99
// iota_c1m72_99 (n_1: U32) = (error)
// 
// // id = c1m72_79
// filter_c1m72_79 stream_1 predicate_2 =
// 
// // id = c1m72_64
// for_c1m72_64 stream_3 f_4 =

// expected stderr:
// examples/typechecking/effects_subset.an:5:16	error: Expected an expression but found `loop`
// iota (n: U32) = loop (i = 0) ->
// 
// examples/typechecking/effects_subset.an:11:4	error: Expected an unindent but found `handle`
//     handle stream ()
// 
// examples/typechecking/effects_subset.an:15:15	error: Expected `=` to begin the function body but found `()`
//         resume ()
// 
// examples/typechecking/effects_subset.an:17:0	error: Expected a top-level item but found an unindent
// for stream f =
// 
// examples/typechecking/effects_subset.an:18:4	error: Expected an unindent but found `handle`
//     handle stream ()
// 
// examples/typechecking/effects_subset.an:23:0	error: Expected a top-level item but found an unindent
// iota 10
// 
// examples/typechecking/effects_subset.an:23:5	error: Expected `=` to begin the function body but found `10`
// iota 10

